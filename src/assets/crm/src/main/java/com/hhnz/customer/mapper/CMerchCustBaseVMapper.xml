<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hhnz.customer.mapper.CMerchCustBaseVMapper" >
  <resultMap id="BaseResultMap" type="com.hhnz.customer.model.CMerchCustBaseV" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 19 09:33:45 CST 2016.
    -->
    <result column="ID" property="id" jdbcType="DECIMAL" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="SAP_CUSTOMER_ID" property="sapCustomerId" jdbcType="VARCHAR" />
    <result column="CUST_TYPE" property="custType" jdbcType="VARCHAR" />
    <result column="CONTACT_NAME" property="contactName" jdbcType="VARCHAR" />
    <result column="CONTACT_TEL" property="contactTel" jdbcType="VARCHAR" />
    <result column="CUST_TYPE_NAME" property="custTypeName" jdbcType="VARCHAR" />
    <result column="SALES_ORG_ID" property="salesOrgId" jdbcType="VARCHAR" />
    <result column="SALES_ORG_NAME" property="salesOrgName" jdbcType="VARCHAR" />
    <result column="SALES_AREA_ID" property="salesAreaId" jdbcType="VARCHAR" />
    <result column="SALES_AREA_NAME" property="salesAreaName" jdbcType="VARCHAR" />
    <result column="SALES_PROV_ID" property="salesProvId" jdbcType="VARCHAR" />
    <result column="SALES_PROV_NAME" property="salesProvName" jdbcType="VARCHAR" />
    <result column="POSITION_ID" property="positionId" jdbcType="DECIMAL" />
    <result column="POSITION_NAME" property="positionName" jdbcType="VARCHAR" />
    <result column="CREATE_TS" property="createTs" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TS" property="updateTs" jdbcType="TIMESTAMP" />
    <result column="SALESMAN" property="salesman" jdbcType="VARCHAR" />
    <result column="STATES" property="states" jdbcType="VARCHAR" />
    <result column="STATES_DESC" property="statesDesc" jdbcType="VARCHAR" />
    <result column="PID" property="pid" jdbcType="DECIMAL" />
    <result column="PROCESS_ID" property="processId" jdbcType="VARCHAR" />
    <result column="BUSINESS_LICENSE" property="businessLicense" jdbcType="VARCHAR" />
    <result column="ORGANIZATION_ID" property="organizationId" jdbcType="VARCHAR"/>
    <result column="EMAIL" property="email" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 19 09:33:45 CST 2016.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 19 09:33:45 CST 2016.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 19 09:33:45 CST 2016.
    -->
    ID, NAME, SAP_CUSTOMER_ID, CUST_TYPE, CONTACT_NAME, CONTACT_TEL, CUST_TYPE_NAME, 
    SALES_ORG_ID, SALES_ORG_NAME, SALES_AREA_ID, SALES_AREA_NAME, SALES_PROV_ID, SALES_PROV_NAME, 
    POSITION_ID, POSITION_NAME, CREATE_TS, UPDATE_TS, SALESMAN, STATES, STATES_DESC, PID, PROCESS_ID, BUSINESS_LICENSE,CODE,ORGANIZATION_ID,EMAIL
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hhnz.customer.model.CMerchCustBaseVExample" >
    <include refid="OracleDialectPrefix" />
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 19 09:33:45 CST 2016.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from (SELECT MCB.ID,
	       MCB.NAME,
	       MCB.SAP_CUSTOMER_ID,
	       MCB.CUST_TYPE,
	       MCB.CONTACT_NAME,
	       MCB.CONTACT_TEL,
	       D.SHOW_TEXT AS CUST_TYPE_NAME,
	       SO1.ID AS SALES_ORG_ID,
	       (select c.name from CRM_SALES_ORGANIZATION c where c.id= SO1.pid)||'-'||SO1.NAME AS SALES_ORG_NAME,
	       (SELECT T.id
          		FROM CRM_SALES_ORGANIZATION T, crm_sales_organization t2
         	WHERE 1 = 1
           		and t2.id = crs.organization_id
           		and t.id = t2.pid)  AS SALES_AREA_ID,
       	   (SELECT T.NAME
          		FROM CRM_SALES_ORGANIZATION T, crm_sales_organization t2
         	WHERE 1 = 1
           		and t2.id = crs.organization_id
           		and t.id = t2.pid) AS SALES_AREA_NAME,
	       SUBSTR(CRS.ORGANIZATION_ID,0,9) AS SALES_PROV_ID,
	       (SELECT T.NAME FROM CRM_SALES_ORGANIZATION T WHERE T.ID=SUBSTR(CRS.ORGANIZATION_ID,0,9)) AS SALES_PROV_NAME,
	       CRS.ID AS POSITION_ID,
	       CRS.NAME AS POSITION_NAME,
	       MCB.CREATE_TS AS CREATE_TS,
	       MCB.UPDATE_TS AS UPDATE_TS,
	       E.NAME AS SALESMAN,
	       MCB.STATES AS STATES,
	       MCB.PID AS PID,
	       MCB.PROCESS_ID AS PROCESS_ID,
	       MCB.Business_License AS Business_License,
	       DECODE(MCB.STATES,
	              '1',
	              '潜在客户',
	              '2',
	              '正式客户',
	              '3',
	              '休眠客户',
	              '4',
	              '失效客户',
	              '') AS STATES_DESC,
	      MCB.code,
	      MCB.ORGANIZATION_ID,
	      MCB.EMAIL
	  FROM C_MERCH_CUST_BASE      mcb,
	       T_EMPLOYEE             E,
	       CRM_SALES_ORGANIZATION SO1,
	       crm_station            crs,
	       c_merch_cust_station   cmcs,
	      (SELECT * FROM  t_dict t where
	      t.COL_NAME='CUST_MERCH_TYPE') d
	 where 1=1
	  and mcb.organization_id= SO1.id
	  and mcb.id= cmcs.merch_cust_id(+)
	  and cmcs.station_id= crs.id(+)
	  and mcb.cust_type =d.choose_val(+)
	  and crs.salesrep_id = e.id(+))
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="countByExample" parameterType="com.hhnz.customer.model.CMerchCustBaseVExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 19 09:33:45 CST 2016.
    -->
    select count(*) from (SELECT MCB.ID,
	       MCB.NAME,
	       MCB.SAP_CUSTOMER_ID,
	       MCB.CUST_TYPE,
	       MCB.CONTACT_NAME,
	       MCB.CONTACT_TEL,
	       D.SHOW_TEXT AS CUST_TYPE_NAME,
	       SO1.ID AS SALES_ORG_ID,
	       SO1.NAME AS SALES_ORG_NAME,
	       SUBSTR(CRS.ORGANIZATION_ID,0,7) AS SALES_AREA_ID,
	       (SELECT T.NAME FROM CRM_SALES_ORGANIZATION T WHERE T.ID=SUBSTR(CRS.ORGANIZATION_ID,0,7)) AS SALES_AREA_NAME,
	       SUBSTR(CRS.ORGANIZATION_ID,0,9) AS SALES_PROV_ID,
	       (SELECT T.NAME FROM CRM_SALES_ORGANIZATION T WHERE T.ID=SUBSTR(CRS.ORGANIZATION_ID,0,9)) AS SALES_PROV_NAME,
	       CRS.ID AS POSITION_ID,
	       CRS.NAME AS POSITION_NAME,
	       MCB.CREATE_TS AS CREATE_TS,
	       MCB.UPDATE_TS AS UPDATE_TS,
	       E.NAME AS SALESMAN,
	       MCB.STATES AS STATES,
	       MCB.PID AS PID,
	       MCB.PROCESS_ID AS PROCESS_ID,
	       MCB.Business_License AS Business_License,
	       DECODE(MCB.STATES,
	              '1',
	              '潜在客户',
	              '2',
	              '正式客户',
	              '3',
	              '休眠客户',
	              '4',
	              '失效客户',
	              '') AS STATES_DESC,
	       MCB.code
	  FROM C_MERCH_CUST_BASE      mcb,
	       T_EMPLOYEE             E,
	       CRM_SALES_ORGANIZATION SO1,
	       crm_station            crs,
	       c_merch_cust_station   cmcs,
	      (SELECT * FROM  t_dict t where
	      t.COL_NAME='CUST_MERCH_TYPE') d
	 where 1=1
	  and mcb.organization_id= SO1.id
	  and mcb.id= cmcs.merch_cust_id(+)
	  and cmcs.station_id= crs.id(+)
	  and mcb.cust_type =d.choose_val(+)
	  and crs.salesrep_id = e.id(+))
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <sql id="OracleDialectPrefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
  
  
  <select id="findCustBaseVague" parameterType="java.util.HashMap" resultMap="BaseResultMap">
  
   <include refid="custBasePrefix" />
  	SELECT MCB.ID,
       MCB.NAME,
       MCB.SAP_CUSTOMER_ID,
       MCB.CUST_TYPE,
       MCB.CONTACT_NAME,
       MCB.CONTACT_TEL,
       D.SHOW_TEXT AS CUST_TYPE_NAME,
       SO1.ID AS SALES_ORG_ID,
       SO1.NAME AS SALES_ORG_NAME,
       SUBSTR(CRS.ORGANIZATION_ID,7) AS SALES_AREA_ID,
       (SELECT T.NAME FROM CRM_SALES_ORGANIZATION T WHERE T.ID=SUBSTR(CRS.ORGANIZATION_ID,7)) AS SALES_AREA_NAME,
       SUBSTR(CRS.ORGANIZATION_ID,9) AS SALES_PROV_ID,
       (SELECT T.NAME FROM CRM_SALES_ORGANIZATION T WHERE T.ID=SUBSTR(CRS.ORGANIZATION_ID,9)) AS SALES_PROV_NAME,
       CRS.ID AS POSITION_ID,
       CRS.NAME AS POSITION_NAME,
       MCB.CREATE_TS AS CREATE_TS,
       MCB.UPDATE_TS AS UPDATE_TS,
       E.NAME AS SALESMAN,
       MCB.STATES AS STATES,
       DECODE(MCB.STATES,
              '1',
              '潜在客户',
              '2',
              '正式客户',
              '3',
              '休眠客户',
              '4',
              '失效客户',
              '') AS STATES_DESC
  	FROM C_MERCH_CUST_BASE      mcb,
       T_EMPLOYEE             E,
       CRM_SALES_ORGANIZATION SO1,
       crm_station            crs,
       c_merch_cust_station   cmcs,
      (SELECT * FROM  t_dict t where
      t.COL_NAME='CUST_MERCH_TYPE') d
 	WHERE 1=1
 		and  mcb.create_oid = e.id(+)
  		and mcb.organization_id= SO1.id
  		and mcb.id= cmcs.merch_cust_id(+)
  		and cmcs.station_id= crs.id(+)
  		and mcb.cust_type =d.choose_val(+)
  		and mcb.cust_type!='5'

  		<if test=" customerBasedto.bizProvId != null and customerBasedto.bizProvId !=''" >
      	 and	SALES_PROV_ID like ${customerBasedto.bizProvId}  
    	</if>
  		<if test=" name != null and name !=''" >
      	 and	MCB.NAME like ${name}  
    	</if>
    	<if test="customerBasedto.custType != null and customerBasedto.custType !=''" >
      		and MCB.CUST_TYPE in
      		<foreach item="item" index="index" collection="custTypeList" open="(" separator="," close=")">  
	 		 	#{item}  
	 	   	</foreach>      		
    	</if>
    	<if test="stations != null" >
		  and cmcs.STATION_ID in 
		  <foreach collection="stations" item="item" index="index" open="(" separator="," close=")">
	    	#{item}
		  </foreach>
    	</if>
     	<if test=" customerBasedto.sales != null and customerBasedto.sales !=''" >
      	 and	SALESMAN like ${customerBasedto.sales}  
    	</if>
    	<!--  	
  		<if test=" customerBasedto.salesArea != null and customerBasedto.salesArea !=''" >
      	 and	SALES_AREA_ID = ${customerBasedto.salesArea}  
    	</if>
    	 -->
    	<if test=" areaList != null " >
      	 and (	
      	 	MCB.PROV_ID in  
      	 	<foreach item="item" index="index" collection="areaList" open="(" separator="," close=")">  
	 		 	#{item}  
	 	   	</foreach>
	 	 	or
	 	 	MCB.CITY_ID in  
      	 	<foreach item="item" index="index" collection="areaList" open="(" separator="," close=")">  
	 		 	#{item}  
	 	   	</foreach>
	 		or
	 		MCB.COUNTY_ID in  
      	 	<foreach item="item" index="index" collection="areaList" open="(" separator="," close=")">  
	 		 	#{item}  
	 	   	</foreach>
	 	
	 	  	)  
    	</if>
  		<if test=" customerBasedto.salesOrg != null and customerBasedto.salesOrg !=''" >
      	 and	SALES_ORG_ID = ${customerBasedto.salesOrg}  
    	</if>
    	<if test=" statusList != null " >
      	 and	MCB.STATES in
      	 
      	 <foreach item="item" index="index" collection="statusList" open="(" separator="," close=")">  
	 		 	#{item}  
	 	  </foreach> 
    	</if>
    	order by create_ts desc
  	  <include refid="custBaseSuffix" />
  </select>
  <sql id="custBasePrefix" >
    <if test="begin != null and end != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="custBaseSuffix" >
    <if test="begin != null and end != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{begin} and rownum_ <= #{end} ]]>
    </if>
  </sql>
  
  <select id="changeOrg" statementType="CALLABLE" parameterType="java.util.Map">
   <![CDATA[
    {call CRM_MERCH_CUST_BASE_PKG.change_org(#{merchId,mode=IN,jdbcType=DECIMAL},
    #{oldOrgId,mode=IN,jdbcType=VARCHAR},
    #{newOrgId,mode=IN,jdbcType=VARCHAR},
    #{changeType,mode=IN,jdbcType=VARCHAR},
    #{stationId,mode=IN,jdbcType=VARCHAR},
    #{salesrepId,mode=IN,jdbcType=VARCHAR},
    #{p_result,mode=OUT,jdbcType=VARCHAR})}
	]]>
  </select>
  
  <select id="changeStates" statementType="CALLABLE" parameterType="java.util.Map">
  	<![CDATA[
    {call CRM_MERCH_CUST_BASE_PKG.change_states(#{merchId,mode=IN,jdbcType=DECIMAL},
    #{states,mode=IN,jdbcType=VARCHAR},
    #{p_result,mode=OUT,jdbcType=VARCHAR})}
	]]>
  </select>
</mapper>