<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hhnz.customer.mapper.CMerchCustProductMapper" >
  <resultMap id="BaseResultMap" type="com.hhnz.customer.model.CMerchCustProduct" >
    <id column="ID" property="id" jdbcType="DECIMAL" />
    <result column="MERCH_CUST_ID" property="merchCustId" jdbcType="DECIMAL" />
    <result column="MATERIAL_ID" property="materialId" jdbcType="VARCHAR" />
    <result column="ORGANIZATION_ID" property="organizationId" jdbcType="VARCHAR" />
    <result column="CONTRACT_ID" property="contractId" jdbcType="DECIMAL" />
    <result column="CONTRACT_LINEID" property="contractLineid" jdbcType="DECIMAL" />
    <result column="PRICE" property="price" jdbcType="DECIMAL" />
    <result column="CREATE_TS" property="createTs" jdbcType="TIMESTAMP" />
    <result column="CREATE_OID" property="createOid" jdbcType="DECIMAL" />
    <result column="UPDATE_TS" property="updateTs" jdbcType="TIMESTAMP" />
    <result column="UPDATE_OID" property="updateOid" jdbcType="DECIMAL" />
    <result column="H_PRICE" property="hPrice" jdbcType="DECIMAL" />
    <result column="STATES" property="states" jdbcType="VARCHAR" />
    <result column="B_DATE" property="bDate" jdbcType="TIMESTAMP" />
    <result column="E_DATE" property="eDate" jdbcType="TIMESTAMP" />
    <result column="BASE_PRICE_ID" property="basePriceId" jdbcType="DECIMAL" />
    <result column="OLD_PRODUCT_ID" property="oldProductId" jdbcType="DECIMAL" />
    <result column="CIF_PRICE" property="cifPrice" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, MERCH_CUST_ID, MATERIAL_ID, ORGANIZATION_ID, CONTRACT_ID, CONTRACT_LINEID, PRICE, 
    CREATE_TS, CREATE_OID, UPDATE_TS, UPDATE_OID, H_PRICE, STATES, B_DATE, E_DATE, BASE_PRICE_ID, 
    OLD_PRODUCT_ID, CIF_PRICE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hhnz.customer.model.CMerchCustProductExample" >
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from C_MERCH_CUST_PRODUCT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from C_MERCH_CUST_PRODUCT
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from C_MERCH_CUST_PRODUCT
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.hhnz.customer.model.CMerchCustProductExample" >
    delete from C_MERCH_CUST_PRODUCT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="saveProduct" parameterType="java.lang.Long" >
  	INSERT INTO C_MERCH_CUST_PRODUCT
	  (ID,
	   MERCH_CUST_ID,
	   MATERIAL_ID,
	   ORGANIZATION_ID,
	   CONTRACT_ID,
	   CONTRACT_LINEID,
	   CREATE_TS,
	   CREATE_OID,
	   STATES,
	   h_price,
	   b_date,
	   e_date)
	  (SELECT SEQ_MERCH_PRODUCT_ID.NEXTVAL,
          CMCC.MERCH_CUST_ID,
          tmcb.sap_id,
          CMCC.ORGANIZATION_ID,
          cmccl.contract_id,
          cmccl.id,
          SYSDATE,
          (SELECT CREATE_OID FROM C_MERCH_CUST_CONTRACT WHERE ID = CMCC.ID),
          '3',<!-- 录入状态 -->
          case when  cmcb.cust_type ='3' then
          	(SELECT max(tmp.price) keep(dense_rank first order by tmp.bdate desc) 
    			FROM T_MATERIAL_PRICE tmp
  			 where 1 = 1
  			    and tmp.material_id=tmcb.sap_id
     			and tmp.edate + 0.99999 > sysdate
     			and tmp.bdate + 0.00001 &lt; sysdate) *(to_number(cmcc.attribute5)-100)/100
          else
          	0
          end,
          trunc(sysdate),
          to_date('9999-12-31','yyyy-mm-dd')
     FROM c_merch_cust_contract_lines cmccl,
          c_merch_cust_contract cmcc,
          t_material_base tmcb,
          t_material_factory     tmf,
          c_merch_cust_base cmcb
    where 1 = 1
      and cmcc.id = cmccl.contract_id
      and cmcc.merch_cust_id= cmcb.id
      and tmcb.active = '1'
      <!-- and (cmccl.agent_id = tmcb.category or cmccl.agent_id = tmcb.brand or
          cmccl.agent_id = tmcb.series or cmccl.agent_id = tmcb.sap_id
          or cmccl.agent_id= tmcb.i_package) -->
      and (cmccl.agent_id = tmcb.category or cmccl.agent_id = tmcb.attribute1 or
          cmccl.agent_id = tmcb.series or cmccl.agent_id = tmcb.sap_id
          or cmccl.agent_id= tmcb.i_package)
	  and cmcc.id = #{contractId,jdbcType=DECIMAL}
	  and tmcb.sap_id = tmf.material_id
	  and tmf.facotry_id = cmcc.factory_id
	  and not exists (SELECT 1
          FROM c_merch_cust_product t
         where t.material_id = tmcb.sap_id
           and t.contract_id = cmcc.id
           and t.contract_lineid = cmccl.id)
	   )
  </insert>
  <insert id="insert" parameterType="com.hhnz.customer.model.CMerchCustProduct" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      select seq_merch_product_id.nextval from dual
    </selectKey>
    insert into C_MERCH_CUST_PRODUCT (ID, MERCH_CUST_ID, MATERIAL_ID, 
      ORGANIZATION_ID, CONTRACT_ID, CONTRACT_LINEID, 
      PRICE, CREATE_TS, CREATE_OID, 
      UPDATE_TS, UPDATE_OID, H_PRICE, 
      STATES, B_DATE, E_DATE, 
      BASE_PRICE_ID, OLD_PRODUCT_ID, CIF_PRICE
      )
    values (#{id,jdbcType=DECIMAL}, #{merchCustId,jdbcType=DECIMAL}, #{materialId,jdbcType=VARCHAR}, 
      #{organizationId,jdbcType=VARCHAR}, #{contractId,jdbcType=DECIMAL}, #{contractLineid,jdbcType=DECIMAL}, 
      #{price,jdbcType=DECIMAL}, #{createTs,jdbcType=TIMESTAMP}, #{createOid,jdbcType=DECIMAL}, 
      #{updateTs,jdbcType=TIMESTAMP}, #{updateOid,jdbcType=DECIMAL}, #{hPrice,jdbcType=DECIMAL}, 
      #{states,jdbcType=VARCHAR}, #{bDate,jdbcType=TIMESTAMP}, #{eDate,jdbcType=TIMESTAMP}, 
      #{basePriceId,jdbcType=DECIMAL}, #{oldProductId,jdbcType=DECIMAL}, #{cifPrice,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hhnz.customer.model.CMerchCustProduct" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      select seq_merch_product_id.nextval from dual
    </selectKey>
    insert into C_MERCH_CUST_PRODUCT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      ID,
      <if test="merchCustId != null" >
        MERCH_CUST_ID,
      </if>
      <if test="materialId != null" >
        MATERIAL_ID,
      </if>
      <if test="organizationId != null" >
        ORGANIZATION_ID,
      </if>
      <if test="contractId != null" >
        CONTRACT_ID,
      </if>
      <if test="contractLineid != null" >
        CONTRACT_LINEID,
      </if>
      <if test="price != null" >
        PRICE,
      </if>
      <if test="createTs != null" >
        CREATE_TS,
      </if>
      <if test="createOid != null" >
        CREATE_OID,
      </if>
      <if test="updateTs != null" >
        UPDATE_TS,
      </if>
      <if test="updateOid != null" >
        UPDATE_OID,
      </if>
      <if test="hPrice != null" >
        H_PRICE,
      </if>
      <if test="states != null" >
        STATES,
      </if>
      <if test="bDate != null" >
        B_DATE,
      </if>
      <if test="eDate != null" >
        E_DATE,
      </if>
      <if test="basePriceId != null" >
        BASE_PRICE_ID,
      </if>
      <if test="oldProductId != null" >
        OLD_PRODUCT_ID,
      </if>
      <if test="cifPrice != null" >
        CIF_PRICE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=DECIMAL},
      <if test="merchCustId != null" >
        #{merchCustId,jdbcType=DECIMAL},
      </if>
      <if test="materialId != null" >
        #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="organizationId != null" >
        #{organizationId,jdbcType=VARCHAR},
      </if>
      <if test="contractId != null" >
        #{contractId,jdbcType=DECIMAL},
      </if>
      <if test="contractLineid != null" >
        #{contractLineid,jdbcType=DECIMAL},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="createTs != null" >
        #{createTs,jdbcType=TIMESTAMP},
      </if>
      <if test="createOid != null" >
        #{createOid,jdbcType=DECIMAL},
      </if>
      <if test="updateTs != null" >
        #{updateTs,jdbcType=TIMESTAMP},
      </if>
      <if test="updateOid != null" >
        #{updateOid,jdbcType=DECIMAL},
      </if>
      <if test="hPrice != null" >
        #{hPrice,jdbcType=DECIMAL},
      </if>
      <if test="states != null" >
        #{states,jdbcType=VARCHAR},
      </if>
      <if test="bDate != null" >
        #{bDate,jdbcType=TIMESTAMP},
      </if>
      <if test="eDate != null" >
        #{eDate,jdbcType=TIMESTAMP},
      </if>
      <if test="basePriceId != null" >
        #{basePriceId,jdbcType=DECIMAL},
      </if>
      <if test="oldProductId != null" >
        #{oldProductId,jdbcType=DECIMAL},
      </if>
      <if test="cifPrice != null" >
        #{cifPrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hhnz.customer.model.CMerchCustProductExample" resultType="java.lang.Integer" >
    select count(*) from C_MERCH_CUST_PRODUCT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update C_MERCH_CUST_PRODUCT
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.merchCustId != null" >
        MERCH_CUST_ID = #{record.merchCustId,jdbcType=DECIMAL},
      </if>
      <if test="record.materialId != null" >
        MATERIAL_ID = #{record.materialId,jdbcType=VARCHAR},
      </if>
      <if test="record.organizationId != null" >
        ORGANIZATION_ID = #{record.organizationId,jdbcType=VARCHAR},
      </if>
      <if test="record.contractId != null" >
        CONTRACT_ID = #{record.contractId,jdbcType=DECIMAL},
      </if>
      <if test="record.contractLineid != null" >
        CONTRACT_LINEID = #{record.contractLineid,jdbcType=DECIMAL},
      </if>
      <if test="record.price != null" >
        PRICE = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.createTs != null" >
        CREATE_TS = #{record.createTs,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createOid != null" >
        CREATE_OID = #{record.createOid,jdbcType=DECIMAL},
      </if>
      <if test="record.updateTs != null" >
        UPDATE_TS = #{record.updateTs,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateOid != null" >
        UPDATE_OID = #{record.updateOid,jdbcType=DECIMAL},
      </if>
      <if test="record.hPrice != null" >
        H_PRICE = #{record.hPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.states != null" >
        STATES = #{record.states,jdbcType=VARCHAR},
      </if>
      <if test="record.bDate != null" >
        B_DATE = #{record.bDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.eDate != null" >
        E_DATE = #{record.eDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.basePriceId != null" >
        BASE_PRICE_ID = #{record.basePriceId,jdbcType=DECIMAL},
      </if>
      <if test="record.oldProductId != null" >
        OLD_PRODUCT_ID = #{record.oldProductId,jdbcType=DECIMAL},
      </if>
      <if test="record.cifPrice != null" >
        CIF_PRICE = #{record.cifPrice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update C_MERCH_CUST_PRODUCT
    set ID = #{record.id,jdbcType=DECIMAL},
      MERCH_CUST_ID = #{record.merchCustId,jdbcType=DECIMAL},
      MATERIAL_ID = #{record.materialId,jdbcType=VARCHAR},
      ORGANIZATION_ID = #{record.organizationId,jdbcType=VARCHAR},
      CONTRACT_ID = #{record.contractId,jdbcType=DECIMAL},
      CONTRACT_LINEID = #{record.contractLineid,jdbcType=DECIMAL},
      PRICE = #{record.price,jdbcType=DECIMAL},
      CREATE_TS = #{record.createTs,jdbcType=TIMESTAMP},
      CREATE_OID = #{record.createOid,jdbcType=DECIMAL},
      UPDATE_TS = #{record.updateTs,jdbcType=TIMESTAMP},
      UPDATE_OID = #{record.updateOid,jdbcType=DECIMAL},
      H_PRICE = #{record.hPrice,jdbcType=DECIMAL},
      STATES = #{record.states,jdbcType=VARCHAR},
      B_DATE = #{record.bDate,jdbcType=TIMESTAMP},
      E_DATE = #{record.eDate,jdbcType=TIMESTAMP},
      BASE_PRICE_ID = #{record.basePriceId,jdbcType=DECIMAL},
      OLD_PRODUCT_ID = #{record.oldProductId,jdbcType=DECIMAL},
      CIF_PRICE = #{record.cifPrice,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hhnz.customer.model.CMerchCustProduct" >
    update C_MERCH_CUST_PRODUCT
    <set >
      <if test="merchCustId != null" >
        MERCH_CUST_ID = #{merchCustId,jdbcType=DECIMAL},
      </if>
      <if test="materialId != null" >
        MATERIAL_ID = #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="organizationId != null" >
        ORGANIZATION_ID = #{organizationId,jdbcType=VARCHAR},
      </if>
      <if test="contractId != null" >
        CONTRACT_ID = #{contractId,jdbcType=DECIMAL},
      </if>
      <if test="contractLineid != null" >
        CONTRACT_LINEID = #{contractLineid,jdbcType=DECIMAL},
      </if>
      <if test="price != null" >
        PRICE = #{price,jdbcType=DECIMAL},
      </if>
      <if test="createTs != null" >
        CREATE_TS = #{createTs,jdbcType=TIMESTAMP},
      </if>
      <if test="createOid != null" >
        CREATE_OID = #{createOid,jdbcType=DECIMAL},
      </if>
      <if test="updateTs != null" >
        UPDATE_TS = #{updateTs,jdbcType=TIMESTAMP},
      </if>
      <if test="updateOid != null" >
        UPDATE_OID = #{updateOid,jdbcType=DECIMAL},
      </if>
      <if test="hPrice != null" >
        H_PRICE = #{hPrice,jdbcType=DECIMAL},
      </if>
      <if test="states != null" >
        STATES = #{states,jdbcType=VARCHAR},
      </if>
      <if test="bDate != null" >
        B_DATE = #{bDate,jdbcType=TIMESTAMP},
      </if>
      <if test="eDate != null" >
        E_DATE = #{eDate,jdbcType=TIMESTAMP},
      </if>
      <if test="basePriceId != null" >
        BASE_PRICE_ID = #{basePriceId,jdbcType=DECIMAL},
      </if>
      <if test="oldProductId != null" >
        OLD_PRODUCT_ID = #{oldProductId,jdbcType=DECIMAL},
      </if>
      <if test="cifPrice != null" >
        CIF_PRICE = #{cifPrice,jdbcType=DECIMAL},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hhnz.customer.model.CMerchCustProduct" >
    update C_MERCH_CUST_PRODUCT
    set MERCH_CUST_ID = #{merchCustId,jdbcType=DECIMAL},
      MATERIAL_ID = #{materialId,jdbcType=VARCHAR},
      ORGANIZATION_ID = #{organizationId,jdbcType=VARCHAR},
      CONTRACT_ID = #{contractId,jdbcType=DECIMAL},
      CONTRACT_LINEID = #{contractLineid,jdbcType=DECIMAL},
      PRICE = #{price,jdbcType=DECIMAL},
      CREATE_TS = #{createTs,jdbcType=TIMESTAMP},
      CREATE_OID = #{createOid,jdbcType=DECIMAL},
      UPDATE_TS = #{updateTs,jdbcType=TIMESTAMP},
      UPDATE_OID = #{updateOid,jdbcType=DECIMAL},
      H_PRICE = #{hPrice,jdbcType=DECIMAL},
      STATES = #{states,jdbcType=VARCHAR},
      B_DATE = #{bDate,jdbcType=TIMESTAMP},
      E_DATE = #{eDate,jdbcType=TIMESTAMP},
      BASE_PRICE_ID = #{basePriceId,jdbcType=DECIMAL},
      OLD_PRODUCT_ID = #{oldProductId,jdbcType=DECIMAL},
      CIF_PRICE = #{cifPrice,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <sql id="OracleDialectPrefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>