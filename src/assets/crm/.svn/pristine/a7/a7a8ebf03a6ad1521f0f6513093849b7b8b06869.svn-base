<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hhnz.customer.mapper.CMerchCustPriceImportMapper" >
  <resultMap id="BaseResultMap" type="com.hhnz.customer.model.CMerchCustPriceImport" >
    <result column="CUST_MERCH_ID" property="custMerchId" jdbcType="DECIMAL" />
    <result column="CUST_NAME" property="custName" jdbcType="VARCHAR" />
    <result column="MAINTENANCE_ID" property="maintenanceId" jdbcType="DECIMAL" />
    <result column="MATERIAL_ID" property="materialId" jdbcType="VARCHAR" />
    <result column="PRICE" property="price" jdbcType="DECIMAL" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    CUST_MERCH_ID, CUST_NAME, MAINTENANCE_ID, MATERIAL_ID, PRICE, REMARK
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hhnz.customer.model.CMerchCustPriceImportExample" >
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from C_MERCH_CUST_PRICE_IMPORT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <delete id="deleteByExample" parameterType="com.hhnz.customer.model.CMerchCustPriceImportExample" >
    delete from C_MERCH_CUST_PRICE_IMPORT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hhnz.customer.model.CMerchCustPriceImport" >
    insert into C_MERCH_CUST_PRICE_IMPORT (CUST_MERCH_ID, CUST_NAME, MAINTENANCE_ID, 
      MATERIAL_ID, PRICE, REMARK
      )
    values (#{custMerchId,jdbcType=DECIMAL}, #{custName,jdbcType=VARCHAR}, #{maintenanceId,jdbcType=DECIMAL}, 
      #{materialId,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hhnz.customer.model.CMerchCustPriceImport" >
    insert into C_MERCH_CUST_PRICE_IMPORT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="custMerchId != null" >
        CUST_MERCH_ID,
      </if>
      <if test="custName != null" >
        CUST_NAME,
      </if>
      <if test="maintenanceId != null" >
        MAINTENANCE_ID,
      </if>
      <if test="materialId != null" >
        MATERIAL_ID,
      </if>
      <if test="price != null" >
        PRICE,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="custMerchId != null" >
        #{custMerchId,jdbcType=DECIMAL},
      </if>
      <if test="custName != null" >
        #{custName,jdbcType=VARCHAR},
      </if>
      <if test="maintenanceId != null" >
        #{maintenanceId,jdbcType=DECIMAL},
      </if>
      <if test="materialId != null" >
        #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hhnz.customer.model.CMerchCustPriceImportExample" resultType="java.lang.Integer" >
    select count(*) from C_MERCH_CUST_PRICE_IMPORT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update C_MERCH_CUST_PRICE_IMPORT
    <set >
      <if test="record.custMerchId != null" >
        CUST_MERCH_ID = #{record.custMerchId,jdbcType=DECIMAL},
      </if>
      <if test="record.custName != null" >
        CUST_NAME = #{record.custName,jdbcType=VARCHAR},
      </if>
      <if test="record.maintenanceId != null" >
        MAINTENANCE_ID = #{record.maintenanceId,jdbcType=DECIMAL},
      </if>
      <if test="record.materialId != null" >
        MATERIAL_ID = #{record.materialId,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        PRICE = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update C_MERCH_CUST_PRICE_IMPORT
    set CUST_MERCH_ID = #{record.custMerchId,jdbcType=DECIMAL},
      CUST_NAME = #{record.custName,jdbcType=VARCHAR},
      MAINTENANCE_ID = #{record.maintenanceId,jdbcType=DECIMAL},
      MATERIAL_ID = #{record.materialId,jdbcType=VARCHAR},
      PRICE = #{record.price,jdbcType=DECIMAL},
      REMARK = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="OracleDialectPrefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>