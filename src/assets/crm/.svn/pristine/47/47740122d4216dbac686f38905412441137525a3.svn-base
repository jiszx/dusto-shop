package com.hhnz.account.model;

import com.hhnz.util.db.Page;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CMerchAccountAllocationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated Thu Nov 24 09:38:22 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated Thu Nov 24 09:38:22 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated Thu Nov 24 09:38:22 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated Thu Nov 24 09:38:22 CST 2016
     */
    protected Page page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated Thu Nov 24 09:38:22 CST 2016
     */
    public CMerchAccountAllocationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated Thu Nov 24 09:38:22 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated Thu Nov 24 09:38:22 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated Thu Nov 24 09:38:22 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated Thu Nov 24 09:38:22 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated Thu Nov 24 09:38:22 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated Thu Nov 24 09:38:22 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated Thu Nov 24 09:38:22 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated Thu Nov 24 09:38:22 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated Thu Nov 24 09:38:22 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated Thu Nov 24 09:38:22 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated Thu Nov 24 09:38:22 CST 2016
     */
    public void setPage(Page page) {
        this.page=page;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated Thu Nov 24 09:38:22 CST 2016
     */
    public Page getPage() {
        return page;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated Thu Nov 24 09:38:22 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUpaccountIdIsNull() {
            addCriterion("UPACCOUNT_ID is null");
            return (Criteria) this;
        }

        public Criteria andUpaccountIdIsNotNull() {
            addCriterion("UPACCOUNT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andUpaccountIdEqualTo(Long value) {
            addCriterion("UPACCOUNT_ID =", value, "upaccountId");
            return (Criteria) this;
        }

        public Criteria andUpaccountIdNotEqualTo(Long value) {
            addCriterion("UPACCOUNT_ID <>", value, "upaccountId");
            return (Criteria) this;
        }

        public Criteria andUpaccountIdGreaterThan(Long value) {
            addCriterion("UPACCOUNT_ID >", value, "upaccountId");
            return (Criteria) this;
        }

        public Criteria andUpaccountIdGreaterThanOrEqualTo(Long value) {
            addCriterion("UPACCOUNT_ID >=", value, "upaccountId");
            return (Criteria) this;
        }

        public Criteria andUpaccountIdLessThan(Long value) {
            addCriterion("UPACCOUNT_ID <", value, "upaccountId");
            return (Criteria) this;
        }

        public Criteria andUpaccountIdLessThanOrEqualTo(Long value) {
            addCriterion("UPACCOUNT_ID <=", value, "upaccountId");
            return (Criteria) this;
        }

        public Criteria andUpaccountIdIn(List<Long> values) {
            addCriterion("UPACCOUNT_ID in", values, "upaccountId");
            return (Criteria) this;
        }

        public Criteria andUpaccountIdNotIn(List<Long> values) {
            addCriterion("UPACCOUNT_ID not in", values, "upaccountId");
            return (Criteria) this;
        }

        public Criteria andUpaccountIdBetween(Long value1, Long value2) {
            addCriterion("UPACCOUNT_ID between", value1, value2, "upaccountId");
            return (Criteria) this;
        }

        public Criteria andUpaccountIdNotBetween(Long value1, Long value2) {
            addCriterion("UPACCOUNT_ID not between", value1, value2, "upaccountId");
            return (Criteria) this;
        }

        public Criteria andAllocationIdIsNull() {
            addCriterion("ALLOCATION_ID is null");
            return (Criteria) this;
        }

        public Criteria andAllocationIdIsNotNull() {
            addCriterion("ALLOCATION_ID is not null");
            return (Criteria) this;
        }

        public Criteria andAllocationIdEqualTo(Long value) {
            addCriterion("ALLOCATION_ID =", value, "allocationId");
            return (Criteria) this;
        }

        public Criteria andAllocationIdNotEqualTo(Long value) {
            addCriterion("ALLOCATION_ID <>", value, "allocationId");
            return (Criteria) this;
        }

        public Criteria andAllocationIdGreaterThan(Long value) {
            addCriterion("ALLOCATION_ID >", value, "allocationId");
            return (Criteria) this;
        }

        public Criteria andAllocationIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ALLOCATION_ID >=", value, "allocationId");
            return (Criteria) this;
        }

        public Criteria andAllocationIdLessThan(Long value) {
            addCriterion("ALLOCATION_ID <", value, "allocationId");
            return (Criteria) this;
        }

        public Criteria andAllocationIdLessThanOrEqualTo(Long value) {
            addCriterion("ALLOCATION_ID <=", value, "allocationId");
            return (Criteria) this;
        }

        public Criteria andAllocationIdIn(List<Long> values) {
            addCriterion("ALLOCATION_ID in", values, "allocationId");
            return (Criteria) this;
        }

        public Criteria andAllocationIdNotIn(List<Long> values) {
            addCriterion("ALLOCATION_ID not in", values, "allocationId");
            return (Criteria) this;
        }

        public Criteria andAllocationIdBetween(Long value1, Long value2) {
            addCriterion("ALLOCATION_ID between", value1, value2, "allocationId");
            return (Criteria) this;
        }

        public Criteria andAllocationIdNotBetween(Long value1, Long value2) {
            addCriterion("ALLOCATION_ID not between", value1, value2, "allocationId");
            return (Criteria) this;
        }

        public Criteria andAllocationDateIsNull() {
            addCriterion("ALLOCATION_DATE is null");
            return (Criteria) this;
        }

        public Criteria andAllocationDateIsNotNull() {
            addCriterion("ALLOCATION_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andAllocationDateEqualTo(Date value) {
            addCriterion("ALLOCATION_DATE =", value, "allocationDate");
            return (Criteria) this;
        }

        public Criteria andAllocationDateNotEqualTo(Date value) {
            addCriterion("ALLOCATION_DATE <>", value, "allocationDate");
            return (Criteria) this;
        }

        public Criteria andAllocationDateGreaterThan(Date value) {
            addCriterion("ALLOCATION_DATE >", value, "allocationDate");
            return (Criteria) this;
        }

        public Criteria andAllocationDateGreaterThanOrEqualTo(Date value) {
            addCriterion("ALLOCATION_DATE >=", value, "allocationDate");
            return (Criteria) this;
        }

        public Criteria andAllocationDateLessThan(Date value) {
            addCriterion("ALLOCATION_DATE <", value, "allocationDate");
            return (Criteria) this;
        }

        public Criteria andAllocationDateLessThanOrEqualTo(Date value) {
            addCriterion("ALLOCATION_DATE <=", value, "allocationDate");
            return (Criteria) this;
        }

        public Criteria andAllocationDateIn(List<Date> values) {
            addCriterion("ALLOCATION_DATE in", values, "allocationDate");
            return (Criteria) this;
        }

        public Criteria andAllocationDateNotIn(List<Date> values) {
            addCriterion("ALLOCATION_DATE not in", values, "allocationDate");
            return (Criteria) this;
        }

        public Criteria andAllocationDateBetween(Date value1, Date value2) {
            addCriterion("ALLOCATION_DATE between", value1, value2, "allocationDate");
            return (Criteria) this;
        }

        public Criteria andAllocationDateNotBetween(Date value1, Date value2) {
            addCriterion("ALLOCATION_DATE not between", value1, value2, "allocationDate");
            return (Criteria) this;
        }

        public Criteria andAllocationOidIsNull() {
            addCriterion("ALLOCATION_OID is null");
            return (Criteria) this;
        }

        public Criteria andAllocationOidIsNotNull() {
            addCriterion("ALLOCATION_OID is not null");
            return (Criteria) this;
        }

        public Criteria andAllocationOidEqualTo(Long value) {
            addCriterion("ALLOCATION_OID =", value, "allocationOid");
            return (Criteria) this;
        }

        public Criteria andAllocationOidNotEqualTo(Long value) {
            addCriterion("ALLOCATION_OID <>", value, "allocationOid");
            return (Criteria) this;
        }

        public Criteria andAllocationOidGreaterThan(Long value) {
            addCriterion("ALLOCATION_OID >", value, "allocationOid");
            return (Criteria) this;
        }

        public Criteria andAllocationOidGreaterThanOrEqualTo(Long value) {
            addCriterion("ALLOCATION_OID >=", value, "allocationOid");
            return (Criteria) this;
        }

        public Criteria andAllocationOidLessThan(Long value) {
            addCriterion("ALLOCATION_OID <", value, "allocationOid");
            return (Criteria) this;
        }

        public Criteria andAllocationOidLessThanOrEqualTo(Long value) {
            addCriterion("ALLOCATION_OID <=", value, "allocationOid");
            return (Criteria) this;
        }

        public Criteria andAllocationOidIn(List<Long> values) {
            addCriterion("ALLOCATION_OID in", values, "allocationOid");
            return (Criteria) this;
        }

        public Criteria andAllocationOidNotIn(List<Long> values) {
            addCriterion("ALLOCATION_OID not in", values, "allocationOid");
            return (Criteria) this;
        }

        public Criteria andAllocationOidBetween(Long value1, Long value2) {
            addCriterion("ALLOCATION_OID between", value1, value2, "allocationOid");
            return (Criteria) this;
        }

        public Criteria andAllocationOidNotBetween(Long value1, Long value2) {
            addCriterion("ALLOCATION_OID not between", value1, value2, "allocationOid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated do_not_delete_during_merge Thu Nov 24 09:38:22 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table C_MERCH_ACCOUNT_ALLOCATION
     *
     * @mbggenerated Thu Nov 24 09:38:22 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}