<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hhnz.crm.mapper.ApiMaterialBaseMapper" >
  <resultMap id="BaseResultMap" type="com.hhnz.crm.model.TMaterialBaseV" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 27 13:14:12 CST 2016.
    -->
    <result column="ORGID" property="orgid" jdbcType="VARCHAR" />
    <result column="ORGNAME" property="orgname" jdbcType="VARCHAR" />
    <result column="ZIPCODE" property="zipcode" jdbcType="VARCHAR" />
    <result column="SAP_ID" property="sapId" jdbcType="VARCHAR" />
    <result column="SKU" property="sku" jdbcType="VARCHAR" />
    <result column="MATERIAL_NAME" property="materialName" jdbcType="VARCHAR" />
    <result column="MATERIAL_TYPE" property="materialType" jdbcType="VARCHAR" />
    <result column="MATERIAL_GROUP" property="materialGroup" jdbcType="VARCHAR" />
    <result column="MATERIAL_GROUPNAME" property="materialGroupname" jdbcType="VARCHAR" />
    <result column="UNIT" property="unit" jdbcType="VARCHAR" />
    <result column="ORDER_UNIT" property="orderUnit" jdbcType="VARCHAR" />
    <result column="PRODUCT_GROUP" property="productGroup" jdbcType="VARCHAR" />
    <result column="PRODUCT_GROUP_NAME" property="productGroupName" jdbcType="VARCHAR" />
    <result column="CATEGORY" property="category" jdbcType="VARCHAR" />
    <result column="BRAND" property="brand" jdbcType="VARCHAR" />
    <result column="LEVELS" property="levels" jdbcType="VARCHAR" />
    <result column="SERIES" property="series" jdbcType="VARCHAR" />
    <result column="P_NAME" property="pName" jdbcType="VARCHAR" />
    <result column="I_PACKAGE" property="iPackage" jdbcType="VARCHAR" />
    <result column="O_PACKAGE" property="oPackage" jdbcType="VARCHAR" />
    <result column="SPECIFICATIONS" property="specifications" jdbcType="VARCHAR" />
    <result column="SYMBOL" property="symbol" jdbcType="VARCHAR" />
    <result column="PROV_ID" property="provId" jdbcType="VARCHAR" />
    <result column="CITY_ID" property="cityId" jdbcType="VARCHAR" />
    <result column="IODINE" property="iodine" jdbcType="VARCHAR" />
    <result column="UNLOOSE" property="unloose" jdbcType="VARCHAR" />
    <result column="ACCESSORIES" property="accessories" jdbcType="VARCHAR" />
    <result column="SALT" property="salt" jdbcType="VARCHAR" />
    <result column="GRAIN" property="grain" jdbcType="VARCHAR" />
    <result column="FLAVOR" property="flavor" jdbcType="VARCHAR" />
    <result column="PRODUCE_TYPE" property="produceType" jdbcType="VARCHAR" />
    <result column="ATTRIBUTE1" property="attribute1" jdbcType="VARCHAR" />
    <result column="ATTRIBUTE2" property="attribute2" jdbcType="VARCHAR" />
    <result column="ATTRIBUTE3" property="attribute3" jdbcType="VARCHAR" />
    <result column="ATTRIBUTE4" property="attribute4" jdbcType="VARCHAR" />
    <result column="ATTRIBUTE5" property="attribute5" jdbcType="VARCHAR" />
    <result column="ATTRIBUTE6" property="attribute6" jdbcType="VARCHAR" />
    <result column="ATTRIBUTE7" property="attribute7" jdbcType="VARCHAR" />
    <result column="ATTRIBUTE8" property="attribute8" jdbcType="VARCHAR" />
    <result column="ATTRIBUTE9" property="attribute9" jdbcType="VARCHAR" />
    <result column="ATTRIBUTE10" property="attribute10" jdbcType="VARCHAR" />
    <result column="BASE_PRICE" property="basePrice" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="OracleDialectPrefix" >
    <if test="begin != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="begin != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{begin} and rownum_ <= #{end} ]]>
    </if>
  </sql>

  <select id="indexFindProduct" resultMap="BaseResultMap" parameterType="java.util.Map" >
    <include refid="OracleDialectPrefix" />
  	SELECT  		
        tmb.SAP_ID,
        tmb.SKU,
        tmb.MATERIAL_NAME,
        tmb.MATERIAL_TYPE,
        tmb.MATERIAL_GROUP,
        tmb.MATERIAL_GROUPNAME,
        tmb.UNIT,
        tmb.ORDER_UNIT,
        tmb.PRODUCT_GROUP,
        tmb.PRODUCT_GROUP_NAME,
        tmb.CATEGORY,
        tmb.BRAND,
        tmb.LEVELS,
        tmb.SERIES,
        tmb.P_NAME,
        tmb.I_PACKAGE,
        tmb.O_PACKAGE,
        tmb.SPECIFICATIONS,
        tmb.SYMBOL,
        tmb.PROV_ID,
        tmb.CITY_ID,
        tmb.IODINE,
        tmb.UNLOOSE,
        tmb.ACCESSORIES,
        tmb.SALT,
        tmb.GRAIN,
        tmb.FLAVOR,
        tmb.PRODUCE_TYPE,
        tmb.ATTRIBUTE1,
        tmb.ATTRIBUTE2,
        tmb.ATTRIBUTE3,
        tmb.ATTRIBUTE4,
        tmb.ATTRIBUTE5,
        tmb.ATTRIBUTE6,
        tmb.ATTRIBUTE7,
        tmb.ATTRIBUTE8,
        tmb.ATTRIBUTE9
    FROM 
        T_MATERIAL_BASE  tmb
        <if test="materialIdList != null">
				WHERE tmb.SAP_ID in 
				<foreach item="item" index="index" collection="materialIdList" open="(" separator="," close=")">  
	 		 		#{item}  
	 	   		</foreach>
		</if>
     <include refid="OracleDialectSuffix" />
  </select>
 
 	<select id="findCategoryProducts" resultMap="BaseResultMap" parameterType="java.util.Map" >
     	SELECT
			SAP_ID,SKU,	MATERIAL_NAME,MATERIAL_TYPE,MATERIAL_GROUP,MATERIAL_GROUPNAME,UNIT,
			ORDER_UNIT,	PRODUCT_GROUP,PRODUCT_GROUP_NAME,CATEGORY,BRAND,LEVELS,	SERIES,	P_NAME,
			I_PACKAGE,	O_PACKAGE,	SPECIFICATIONS,	SYMBOL,	PROV_ID,CITY_ID,IODINE,	UNLOOSE,
			ACCESSORIES,SALT,GRAIN,FLAVOR,PRODUCE_TYPE,ATTRIBUTE1,	ATTRIBUTE2,	ATTRIBUTE3,	ATTRIBUTE4,
			ATTRIBUTE5,	ATTRIBUTE6,	ATTRIBUTE7,ATTRIBUTE8,ATTRIBUTE9,ATTRIBUTE10,BASE_PRICE
		FROM
		(
			SELECT
				TYPE,
				ROW_NUMBER () OVER (
					PARTITION BY TYPE
					ORDER BY	BASE_PRICE
				) AS rowNumber,
				SAP_ID,SKU,	MATERIAL_NAME,MATERIAL_TYPE,MATERIAL_GROUP,MATERIAL_GROUPNAME,UNIT,
				ORDER_UNIT,	PRODUCT_GROUP,PRODUCT_GROUP_NAME,CATEGORY,BRAND,LEVELS,	SERIES,	P_NAME,
				I_PACKAGE,	O_PACKAGE,	SPECIFICATIONS,	SYMBOL,	PROV_ID,CITY_ID,IODINE,	UNLOOSE,
				ACCESSORIES,SALT,GRAIN,FLAVOR,PRODUCE_TYPE,ATTRIBUTE1,	ATTRIBUTE2,	ATTRIBUTE3,	ATTRIBUTE4,
				ATTRIBUTE5,	ATTRIBUTE6,	ATTRIBUTE7,ATTRIBUTE8,ATTRIBUTE9,ATTRIBUTE10,BASE_PRICE
			FROM
			(
				SELECT
					tmb.SAP_ID,	tmb.SKU,tmb.MATERIAL_NAME,tmb.MATERIAL_TYPE,tmb.MATERIAL_GROUP,
					tmb.MATERIAL_GROUPNAME,	tmb.UNIT,tmb.ORDER_UNIT,tmb.PRODUCT_GROUP,
					tmb.PRODUCT_GROUP_NAME,	tmb. CATEGORY,	tmb.BRAND,tmb. LEVELS,
					tmb.SERIES,tmb.P_NAME,tmb.I_PACKAGE,tmb.O_PACKAGE,tmb.SPECIFICATIONS,tmb.SYMBOL,
					tmb.PROV_ID,tmb.CITY_ID,tmb.IODINE,tmb.UNLOOSE,tmb.ACCESSORIES,tmb. SALT,tmb.GRAIN,tmb.FLAVOR,
					tmb.PRODUCE_TYPE,tmb.ATTRIBUTE1,tmb.ATTRIBUTE2,tmb.ATTRIBUTE3,tmb.ATTRIBUTE4,tmb.ATTRIBUTE5,tmb.ATTRIBUTE6,
					tmb.ATTRIBUTE7,tmb.ATTRIBUTE8,tmb.ATTRIBUTE9,tmb.ATTRIBUTE10,TMP.PRICE AS BASE_PRICE,
					tmb. CATEGORY AS TYPE
				FROM
					T_MATERIAL_BASE tmb
				LEFT JOIN T_MATERIAL_PRICE tmp ON tmb.SAP_ID = tmp.MATERIAL_ID
				LEFT JOIN T_PRODUCT_CATEGORY tpc ON tmb. CATEGORY = tpc. ID
				WHERE
					tpc.PID IS NULL
					AND TMB.CATEGORY IS NOT NULL
					AND TMB.CATEGORY  != '?'
			) 
		)
	WHERE
		rowNumber &lt;= 2				
  </select>

  <select id="findTypeProduct" resultMap="BaseResultMap" parameterType="java.util.Map" >
    <include refid="OracleDialectPrefix" />
	  SELECT   		
        tmb.SAP_ID, tmb.SKU,tmb.MATERIAL_NAME, tmb.MATERIAL_TYPE, tmb.MATERIAL_GROUP,
        tmb.MATERIAL_GROUPNAME, tmb.UNIT, tmb.ORDER_UNIT, tmb.PRODUCT_GROUP,
        tmb.PRODUCT_GROUP_NAME,tmb.CATEGORY,tmb.BRAND, tmb.LEVELS,tmb.SERIES,
        tmb.P_NAME,tmb.I_PACKAGE,tmb.O_PACKAGE,tmb.SPECIFICATIONS,tmb.SYMBOL,tmb.PROV_ID,
        tmb.CITY_ID,tmb.IODINE,tmb.UNLOOSE,tmb.ACCESSORIES,tmb.SALT,tmb.GRAIN,
        tmb.FLAVOR,tmb.PRODUCE_TYPE,tmb.ATTRIBUTE1,tmb.ATTRIBUTE2,tmb.ATTRIBUTE3,tmb.ATTRIBUTE4,
        tmb.ATTRIBUTE5,tmb.ATTRIBUTE6,tmb.ATTRIBUTE7,tmb.ATTRIBUTE8,tmb.ATTRIBUTE9,tmb.ATTRIBUTE10		
      FROM 
        T_MATERIAL_BASE   tmb  	
      WHERE
      	  <choose>
      	  	<when test="categoryId != null">
      	  		tmb.series = #{categoryId,jdbcType=VARCHAR}
      	  	</when>
      	  	<otherwise>
      	  		1=1
      	  	</otherwise>
      	  </choose>
      		<if test="name != null">
      		AND  tmb.SKU LIKE ${name}
      	  </if> 
			<if test="materialIdList != null">
				AND tmb.SAP_ID in 
				<foreach item="item" index="index" collection="materialIdList" open="(" separator="," close=")">  
	 		 		#{item}  
	 	   		</foreach>
			</if>
    <include refid="OracleDialectSuffix" />
  </select>
  
    <select id="findMaterialById" resultMap="BaseResultMap" parameterType="String" >
	  SELECT   		
        tmb.SAP_ID, tmb.SKU,tmb.MATERIAL_NAME, tmb.MATERIAL_TYPE, tmb.MATERIAL_GROUP,
        tmb.MATERIAL_GROUPNAME, tmb.UNIT, tmb.ORDER_UNIT, tmb.PRODUCT_GROUP,
        tmb.PRODUCT_GROUP_NAME,tmb.CATEGORY,tmb.BRAND, tmb.LEVELS,tmb.SERIES,
        tmb.P_NAME,tmb.I_PACKAGE,tmb.O_PACKAGE,tmb.SPECIFICATIONS,tmb.SYMBOL,tmb.PROV_ID,
        tmb.CITY_ID,tmb.IODINE,tmb.UNLOOSE,tmb.ACCESSORIES,tmb.SALT,tmb.GRAIN,
        tmb.FLAVOR,tmb.PRODUCE_TYPE,tmb.ATTRIBUTE1,tmb.ATTRIBUTE2,tmb.ATTRIBUTE3,tmb.ATTRIBUTE4,
        tmb.ATTRIBUTE5,tmb.ATTRIBUTE6,tmb.ATTRIBUTE7,tmb.ATTRIBUTE8,tmb.ATTRIBUTE9,tmb.ATTRIBUTE10
      FROM 
        T_MATERIAL_BASE  tmb 
      WHERE
      	  tmb.SAP_ID = #{materialId,jdbcType=VARCHAR}
  </select>

</mapper>