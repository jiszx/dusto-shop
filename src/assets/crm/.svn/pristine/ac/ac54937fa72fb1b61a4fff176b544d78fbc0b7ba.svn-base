<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hhnz.cost.mapper.CrmCostBalancesVMapper" >
  <resultMap id="BaseResultMap" type="com.hhnz.cost.model.CrmCostBalancesV" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 14 14:23:08 CST 2016.
    -->
    <result column="COST_TYPEID" property="costTypeid" jdbcType="VARCHAR" />
    <result column="ID" property="id" jdbcType="DECIMAL" />
    <result column="ORGID" property="orgid" jdbcType="VARCHAR" />
    <result column="ORGNAME" property="orgname" jdbcType="VARCHAR" />
    <result column="REGION_ID" property="regionId" jdbcType="VARCHAR" />
    <result column="REGION_NAME" property="regionName" jdbcType="VARCHAR" />
    <result column="PROV_ID" property="provId" jdbcType="VARCHAR" />
    <result column="PROV_NAME" property="provName" jdbcType="VARCHAR" />
    <result column="YTD" property="ytd" jdbcType="DECIMAL" />
    <result column="D_AMT" property="dAmt" jdbcType="DECIMAL" />
    <result column="C_AMT" property="cAmt" jdbcType="DECIMAL" />
    <result column="PTD" property="ptd" jdbcType="DECIMAL" />
    <result column="PERIOD" property="period" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 14 14:23:08 CST 2016.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 14 14:23:08 CST 2016.
    -->
    COST_TYPEID, ID, ORGNAME, REGION_ID, REGION_NAME, PROV_ID, PROV_NAME, YTD, D_AMT, 
    C_AMT, PTD, PERIOD
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hhnz.cost.model.CrmCostBalancesVExample" >
    <include refid="OracleDialectPrefix" />
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 14 14:23:08 CST 2016.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from (SELECT ccm.cost_typeid,
       cso.id as orgid,
       ccb.id,
       cso.name as orgname,
       cso1.id as region_id,
       cso1.name as region_name,
       cso2.id as prov_id,
       cso2.name as prov_name,
       ccb.ytd,
       ccb.d_amt,
       ccb.c_amt,
       nvl(ccb.ytd, 0) + nvl(ccb.d_amt, 0) - nvl(ccb.c_amt, 0) as ptd,
       ccb.period
  FROM crm_cost_main          ccm,
       crm_cost_balances      ccb,
       crm_sales_organization cso,
       crm_sales_organization cso1,
       crm_sales_organization cso2
 where ccb.cost_mainid = ccm.id
   and ccb.organization_id = cso.id
   and ccm.organization_id = ccb.organization_id
   and ccm.region_id = cso1.id
   and ccm.prov_id = cso2.id)
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="countByExample" parameterType="com.hhnz.cost.model.CrmCostBalancesVExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 14 14:23:08 CST 2016.
    -->
    select count(*) from (SELECT ccm.cost_typeid,
       cso.id as orgid,
       ccb.id,
       cso.name as orgname,
       cso1.id as region_id,
       cso1.name as region_name,
       cso2.id as prov_id,
       cso2.name as prov_name,
       ccb.ytd,
       ccb.d_amt,
       ccb.c_amt,
       nvl(ccb.ytd, 0) + nvl(ccb.d_amt, 0) - nvl(ccb.c_amt, 0) as ptd,
       ccb.period
  FROM crm_cost_main          ccm,
       crm_cost_balances      ccb,
       crm_sales_organization cso,
       crm_sales_organization cso1,
       crm_sales_organization cso2
 where ccb.cost_mainid = ccm.id
   and ccb.organization_id = cso.id
   and ccm.organization_id = ccb.organization_id
   and ccm.region_id = cso1.id
   and ccm.prov_id = cso2.id)
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <select id="getMaxPeriod" resultType="String">
   	 SELECT max(cmcb.period) FROM crm_cost_balances  cmcb
   </select>
   
   <select id="upBalance" statementType="CALLABLE" parameterType="java.util.Map">
     <![CDATA[
    {call crm_cost_period_pkg.cost_period(#{p_period,mode=IN,jdbcType=VARCHAR},
    #{p_result,mode=OUT,jdbcType=VARCHAR})}
	]]>
   </select>
   
  <sql id="OracleDialectPrefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>